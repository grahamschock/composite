include Makefile.src Makefile.comp Makefile.dependencies

IFNAME=$(lastword $(subst /, ,$(shell pwd)))
SUBDIRS=$(wildcard */)

CLIB=libinterfacelib.a # this is the library for all implementations of this interface
INCLUDES=$(DEPENDENCY_INCPATH) $(CINC)

OBJS=$(patsubst %.c,%.o,$(wildcard *.c)) $(patsubst %.S,%.o,$(wildcard *.S)) $(patsubst %.cc,%.o,$(wildcard *.cc))

#NOTE: assembly files don't have dependencies generated for them
SOURCE_DEPENDENCIES=$($(wildcard *.c):%.c=%.d) $($(wildcard *.cc):%.cc=%.d)

.PHONY: all
all: print $(SOURCE_DEPENDENCIES) $(CLIB) subdirs

.PHONY: print
print:
	$(info |     [COMP]   Processing component interface $(IFNAME))

.PHONY: subdirs
subdirs:
	@for dir in $(SUBDIRS) ; do \
		$(MAKE) -C $$dir ;  \
	done

$(CLIB):$(OBJS)
ifneq ($(strip $(OBJS)),)
	$(info |     [AR]   Creating component server library $@ for $(IFNAME))
	@$(AR) cr $@ $^
endif

%.o:%.c
	$(info |     [CC]   $<: Compiling)
	@$(CC) $(INCLUDES) $(CFLAGS) -o $@ -c $<

%.o:%.S
	$(info |     [AS]   $<: Compiling)
	@$(AS) $(INCLUDES) $(ASFLAGS) -c -o $@ $^

%.o:%.cc
	$(info |     [CXX]  $<: Compiling)
	@$(CXX) $(INCLUDES) $(LIBSTDCXXINC) $(CXXFLAGS) -o $@ -c $^

# see the make manual: create the .d dependencies from include
# statements.
%.d:%.c
#	$(info |     [DEP]  Creating dependency file for $<)
	@set -e; rm -f $@; \
	$(CC) -M $(INCLUDE) $(CFLAGS) $< > $@.$$$$; \
	sed 's,\($*\)\.o[ :]*,\1.o $@ : ,g' < $@.$$$$ > $@; \
	rm -f $@.$$$$

.PHONY: clean
clean:
#	$(info |     [RM]   Cleaning up implementation directory for interface $(IFNAME))
	@rm -f a.out *.o *.a *.d *.d.* *~
	@for dir in $(SUBDIRS) ; do \
		$(MAKE) -C $$dir clean ; \
	done

.PHONY: component
component:
	$(MAKE) -C $(COMP_NAME) component

-include $(SOURCE_DEPENDENCIES)
